{
  "openapi": "3.0.0",
  "paths": {
    "/permissions": {
      "post": {
        "operationId": "PermissionsController_createPermission",
        "summary": "",
        "description": "Crea un permiso",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "crea un permiso usando un PermissionDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              },
              "examples": {
                "ejemplo1": {
                  "value": {
                    "name": "create"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permiso creado correctamente"
          },
          "409": {
            "description": "Permiso existe"
          }
        },
        "tags": [
          "permissions"
        ]
      },
      "get": {
        "operationId": "PermissionsController_getAllPermissions",
        "summary": "",
        "description": "Deveulve los permisos filtrados por name",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Deveulve los permisos filtrados por name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permisos devueltos correctamente"
          }
        },
        "tags": [
          "permissions"
        ]
      },
      "put": {
        "operationId": "PermissionsController_updatePermission",
        "summary": "",
        "description": "Actualiza un permiso",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "ACtualiza un permiso usando un UpdatePermissionDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePermissionDto"
              },
              "examples": {
                "ejemplo1": {
                  "value": {
                    "originalName": "create",
                    "newName": "delete"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permiso actualizado correctamente"
          },
          "409": {
            "description": "Ambos Permisos existen"
          }
        },
        "tags": [
          "permissions"
        ]
      }
    },
    "/permissions/{name}": {
      "delete": {
        "operationId": "PermissionsController_deletePermission",
        "summary": "",
        "description": "Borra un permiso dado un name y devuelve el borrado",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "Pasar el name del permiso a borrar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permisos borrado correctamente"
          }
        },
        "tags": [
          "permissions"
        ]
      }
    },
    "/roles": {
      "post": {
        "operationId": "RolesController_createRole",
        "summary": "",
        "description": "Crea un rol",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "crea un rol usando un roleDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              },
              "examples": {
                "ejemplo1": {
                  "value": {
                    "name": "superuser",
                    "permissions": [
                      {
                        "name": "CREATE"
                      },
                      {
                        "name": "UPDATE"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ROL creado correctamente"
          },
          "409": {
            "description": "ROL existe, <br/> El permiso no existe"
          }
        },
        "tags": [
          "roles"
        ]
      },
      "get": {
        "operationId": "RolesController_getRoles",
        "summary": "",
        "description": "Devuelve los roles filtrados por name",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filtra los roles segun el name dado",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Roles devueltos correctamente"
          }
        },
        "tags": [
          "roles"
        ]
      }
    },
    "/roles/{name}": {
      "put": {
        "operationId": "RolesController_updateRole",
        "summary": "",
        "description": "Actualiza un rol",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "pasar como param el nomnbre del rol a actualizar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Actualiza un rol usando un roleDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              },
              "examples": {
                "ejemplo1": {
                  "value": {
                    "name": "superuser",
                    "permissions": [
                      {
                        "name": "CREATE"
                      },
                      {
                        "name": "UPDATE"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "ROL actualizado correctamente"
          },
          "409": {
            "description": "ROL ya existe, <br/> El permiso no existe"
          }
        },
        "tags": [
          "roles"
        ]
      },
      "delete": {
        "operationId": "RolesController_deleteRole",
        "summary": "",
        "description": "Elimina un rol",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "nombre del rol a eliminar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rol eliminado correctamente"
          },
          "409": {
            "description": "ROL no existe<br/>. Existen usuarios con este rol"
          }
        },
        "tags": [
          "roles"
        ]
      }
    },
    "/roles/add-permission/{name}": {
      "patch": {
        "operationId": "RolesController_addPermission",
        "summary": "",
        "description": "Agrega un permiso a un rol",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "pasar como param el nombre del rol a agregarle un permiso",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Pasar un permissionDto para agregar un permiso a un rol",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              },
              "examples": {
                "ejemplo1": {
                  "value": {
                    "name": "READ"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "permiso agregado al rol correctamente"
          },
          "409": {
            "description": "ROL no existe, <br/> El permiso no existe <br/>. El permiso ya existe en el rol"
          }
        },
        "tags": [
          "roles"
        ]
      }
    },
    "/roles/remove-permission/{name}": {
      "patch": {
        "operationId": "RolesController_removePermission",
        "summary": "",
        "description": "Borra un permiso a un rol",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "pasar como param el nombre del rol a borrarle un permiso",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Pasar un permissionDto para borrar un permiso a un rol",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              },
              "examples": {
                "ejemplo1": {
                  "value": {
                    "name": "UPDATE"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "permiso borrado al rol correctamente"
          },
          "409": {
            "description": "ROL no existe, <br/> El permiso no existe <br/>. El permiso no existe en el rol para ser borrado"
          }
        },
        "tags": [
          "roles"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "UsersController_createUser",
        "summary": "",
        "description": "Crea un usuario",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "crea un usuario usando un userDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              },
              "examples": {
                "ejemplo1": {
                  "value": {
                    "name": "user1",
                    "email": "f1@email.com",
                    "birthday": "1990-02-02",
                    "role": {
                      "name": "ADMIN"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "usuario creado correctamente"
          },
          "409": {
            "description": "Email del user ya existe, <br/> El rol no existe"
          }
        },
        "tags": [
          "users"
        ]
      },
      "get": {
        "operationId": "UsersController_getUsers",
        "summary": "",
        "description": "Devuelve todos los usuarios con roles y permisos populados",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Usuarios devueltos correctamente"
          }
        },
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "UsersController_updateUser",
        "summary": "",
        "description": "Actualiza un usuario",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Actualiza un usuario usando un userDto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              },
              "examples": {
                "ejemplo1": {
                  "value": {
                    "name": "user2",
                    "email": "f1@email.com",
                    "birthday": "1990-02-02",
                    "role": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado correctamente"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/deleted": {
      "get": {
        "operationId": "UsersController_getUsersDeleted",
        "summary": "",
        "description": "Devuelve todos los usuarios borrados",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Usuarios devueltos correctamente"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/add-role": {
      "patch": {
        "operationId": "UsersController_addRole",
        "summary": "",
        "description": "Agrega un rol a un usuario",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Pasar un UserRoleDto para agregar un rol",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleDto"
              },
              "examples": {
                "ejemplo1": {
                  "value": {
                    "userCode": 1,
                    "roleName": "SUPERUSER"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "rol agregado correctamente al usuario"
          },
          "409": {
            "description": "el usuario ya tiene un rol, <br/> El rol no existe<br/>. El usuario no existe"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/remove-role/{userCode}": {
      "patch": {
        "operationId": "UsersController_removeRole",
        "summary": "",
        "description": "Elimina un rol a un usuario",
        "parameters": [
          {
            "name": "userCode",
            "required": true,
            "in": "path",
            "description": "Codigo del usuario al cual vamos a eliminar su rol",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Rol eliminado correctamente del usuario"
          },
          "409": {
            "description": "El rol no existe<br/>. El usuario no existe"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{userCode}": {
      "patch": {
        "operationId": "UsersController_deleteUser",
        "summary": "",
        "description": "Actualiza a un usuario con deleted:true",
        "parameters": [
          {
            "name": "userCode",
            "required": true,
            "in": "path",
            "description": "Codigo del usuario al cual vamos a pasarle deleted: true",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "usuario eliminado correctamente"
          },
          "409": {
            "description": "El usuario ya esta borrado <br/>. El usuario no existe para ser borrado"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/restore/{userCode}": {
      "patch": {
        "operationId": "UsersController_restoreUser",
        "summary": "",
        "description": "Actualiza a un usuario con deleted:false",
        "parameters": [
          {
            "name": "userCode",
            "required": true,
            "in": "path",
            "description": "Codigo del usuario al cual vamos a pasarle deleted: true",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "usuario restaurado correctamente"
          },
          "409": {
            "description": "El usuario ya esta restaurado <br/>. El usuario no existe para ser restaurado"
          }
        },
        "tags": [
          "users"
        ]
      }
    }
  },
  "info": {
    "title": "permimssions nest-api",
    "description": "example api mongoDB-mongoose",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "PermissionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre del permiso"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdatePermissionDto": {
        "type": "object",
        "properties": {
          "originalName": {
            "type": "string",
            "description": "nombre del permiso a actualizar"
          },
          "newName": {
            "type": "string",
            "description": "nuevo nombre del permiso"
          }
        },
        "required": [
          "originalName",
          "newName"
        ]
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the role"
          },
          "permissions": {
            "description": "Lista de permimsos asociado a un rol",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "name": {
            "format": "date-time",
            "type": "string",
            "description": "Fecha de nacimiento del usuario"
          },
          "role": {
            "description": "Role del usuario",
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleDto"
              }
            ]
          }
        },
        "required": [
          "name",
          "name",
          "name"
        ]
      },
      "UserRoleDto": {
        "type": "object",
        "properties": {
          "userCode": {
            "type": "number",
            "description": "Codigo del usuario al cual se le va a agregar un rol"
          },
          "roleName": {
            "type": "string",
            "description": "noimbre del rol a agregar al usuario, agregado en mayusculas"
          }
        },
        "required": [
          "userCode",
          "roleName"
        ]
      }
    }
  }
}